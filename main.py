import time

from constants import DXF_DIR
from convert_dxf import convert_dxf_with_bulge
from process_dxf_utils import get_all_dxf_files, read_index, write_index_safely

# üìÅ –ù–∞—Å—Ç—Ä–æ–π–∫–∏
INPUT_DIR = DXF_DIR
INDEX_JSON = "index.json"
CHECK_INTERVAL = 3  # –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
DELAY_BETWEEN_FILES = 5


def main_loop():
    print("üåÄ –ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ DXF...")
    while True:
        try:
            index = read_index(INDEX_JSON)
            updated_index = index.copy()

            for input_path in get_all_dxf_files(INPUT_DIR):
                rel_path = input_path.relative_to(INPUT_DIR).as_posix()
                current_mtime = input_path.stat().st_mtime

                if rel_path not in index or index[rel_path] != current_mtime:
                    print(f"üìÇ –û–±—Ä–∞–±–æ—Ç–∫–∞: {rel_path}")
                    try:
                        convert_dxf_with_bulge(str(input_path), str(input_path))
                        updated_mtime = input_path.stat().st_mtime
                        updated_index[rel_path] = updated_mtime
                        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {rel_path}")
                        time.sleep(DELAY_BETWEEN_FILES)
                    except Exception as e:
                        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {rel_path}: {e}")

            # –ø–æ—Å–ª–µ for input_path in get_all_dxf_files(...), —Å–æ–±—Ä–∞—Ç—å –≤—Å—ë –≤ set
            existing_files = {f.relative_to(INPUT_DIR).as_posix() for f in get_all_dxf_files(INPUT_DIR)}

            # —É–¥–∞–ª–∏—Ç—å –∏–∑ index.json –≤—Å–µ –∑–∞–ø–∏—Å–∏, –∫–æ—Ç–æ—Ä—ã—Ö –±–æ–ª—å—à–µ –Ω–µ—Ç –≤ input/
            for key in list(updated_index.keys()):
                if key not in existing_files:
                    print(f"üßπ –£–¥–∞–ª—ë–Ω –∏–∑ index.json (—Ñ–∞–π–ª–∞ —É–∂–µ –Ω–µ—Ç): {key}")
                    del updated_index[key]
                    time.sleep(DELAY_BETWEEN_FILES)  # ‚è± –ø–∞—É–∑–∞, –µ—Å–ª–∏ —Ç—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—à—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ

            write_index_safely(updated_index, INDEX_JSON)
            time.sleep(CHECK_INTERVAL)

        except KeyboardInterrupt:
            print("üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (Ctrl+C)")
            break
        except Exception as loop_ex:
            print(f"‚ÄºÔ∏è –û—à–∏–±–∫–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ü–∏–∫–ª–∞: {loop_ex}")
            time.sleep(10)


if __name__ == "__main__":
    main_loop()
