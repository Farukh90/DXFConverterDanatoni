import requests

from constants import BASE_WEBHOOK

# üîπ –£–∫–∞–∂–∏—Ç–µ —Å–≤–æ–π –≤–µ–±—Ö—É–∫
SEND_MESSAGE_URL = f"{BASE_WEBHOOK}im.message.add.json"


def send_chat_message(chat_id: str, message: str, user_id: int = None) -> dict:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç Bitrix24 —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

    :param chat_id: ID —á–∞—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, "chat27946")
    :param message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :param user_id: (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Bitrix24
    :return: –û—Ç–≤–µ—Ç –æ—Ç Bitrix API
    """
    if user_id:
        full_message = f"[USER={user_id}][/USER], {message}"
    else:
        full_message = message

    payload = {
        "DIALOG_ID": chat_id,
        "MESSAGE": full_message
    }

    response = requests.post(SEND_MESSAGE_URL, json=payload)
    return response.json()


def send_private_message(user_id: int, message: str) -> dict:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ª–∏—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤ Bitrix24.

    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Bitrix24
    :param message: –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    :return: –û—Ç–≤–µ—Ç –æ—Ç Bitrix API
    """
    payload = {
        "DIALOG_ID": str(user_id),  # –ü—Ä—è–º–æ–π –¥–∏–∞–ª–æ–≥ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
        "MESSAGE": message
    }

    response = requests.post(SEND_MESSAGE_URL, json=payload)
    return response.json()


if __name__ == "__main__":
    # wer = send_chat_message("chat27946", "eadrfgewarg")
    # print(wer)
    #
    # werwe = send_chat_message("chat27946", "!!!!!!", user_id=262)
    # print(werwe)

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –ª–∏—á–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å ID 262
    send_private_message(284, "–ü—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞")